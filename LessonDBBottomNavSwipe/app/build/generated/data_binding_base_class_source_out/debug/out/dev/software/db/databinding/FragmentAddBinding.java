// Generated by view binder compiler. Do not edit!
package dev.software.db.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import dev.software.db.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout authorContainer;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final TextInputEditText editAuthor;

  @NonNull
  public final TextInputEditText editGenre;

  @NonNull
  public final TextInputEditText editTitle;

  @NonNull
  public final TextInputLayout genreContainer;

  @NonNull
  public final TextInputLayout titleContainer;

  private FragmentAddBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputLayout authorContainer, @NonNull Button btnAdd,
      @NonNull TextInputEditText editAuthor, @NonNull TextInputEditText editGenre,
      @NonNull TextInputEditText editTitle, @NonNull TextInputLayout genreContainer,
      @NonNull TextInputLayout titleContainer) {
    this.rootView = rootView;
    this.authorContainer = authorContainer;
    this.btnAdd = btnAdd;
    this.editAuthor = editAuthor;
    this.editGenre = editGenre;
    this.editTitle = editTitle;
    this.genreContainer = genreContainer;
    this.titleContainer = titleContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.author_container;
      TextInputLayout authorContainer = rootView.findViewById(id);
      if (authorContainer == null) {
        break missingId;
      }

      id = R.id.btn_add;
      Button btnAdd = rootView.findViewById(id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.edit_author;
      TextInputEditText editAuthor = rootView.findViewById(id);
      if (editAuthor == null) {
        break missingId;
      }

      id = R.id.edit_genre;
      TextInputEditText editGenre = rootView.findViewById(id);
      if (editGenre == null) {
        break missingId;
      }

      id = R.id.edit_title;
      TextInputEditText editTitle = rootView.findViewById(id);
      if (editTitle == null) {
        break missingId;
      }

      id = R.id.genre_container;
      TextInputLayout genreContainer = rootView.findViewById(id);
      if (genreContainer == null) {
        break missingId;
      }

      id = R.id.title_container;
      TextInputLayout titleContainer = rootView.findViewById(id);
      if (titleContainer == null) {
        break missingId;
      }

      return new FragmentAddBinding((LinearLayout) rootView, authorContainer, btnAdd, editAuthor,
          editGenre, editTitle, genreContainer, titleContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
